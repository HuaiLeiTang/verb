/*! verb 2014-09-07 */
function getEastNeighbor(e,r,n,t,i,a){return n===i-1?null:a[e+1]}function getNorthNeighbor(e,r,n,t,i,a){return 0===r?null:a[e-i]}function getSouthNeighbor(e,r,n,t,i,a){return r===t-1?null:a[e+i]}function getWestNeighbor(e,r,n,t,i,a){return 0===n?null:a[e-1]}function crossprod(e,r){return[e[1]*r[2]-e[2]*r[1],e[2]*r[0]-e[0]*r[2],e[0]*r[1]-e[1]*r[0]]}if("object"!=typeof exports||void 0===exports)importScripts("labor.js"),importScripts("binomial.js"),importScripts("numeric-1.2.6.min.js");else var labor=require("labor");var verb=verb||{};verb.eval=verb.eval||{},verb.eval.nurbs=verb.eval.nurbs||{},verb.eval.mesh=verb.eval.mesh||{},verb.eval.geom=verb.eval.geom||{},verb.geom=verb.geom||{},verb.EPSILON=1e-8,verb.TOLERANCE=.001;var router=new labor.Router(verb.eval.nurbs);numeric.normalized=function(e){return numeric.div(e,numeric.norm2(e))},numeric.cross=function(e,r){return[e[1]*r[2]-e[2]*r[1],e[2]*r[0]-e[0]*r[2],e[0]*r[1]-e[1]*r[0]]},verb.left=function(e){if(0===e.length)return[];var r=Math.ceil(e.length/2);return e.slice(0,r)},verb.right=function(e){if(0===e.length)return[];var r=Math.ceil(e.length/2);return e.slice(r)},verb.rightWithPivot=function(e){if(0===e.length)return[];var r=Math.ceil(e.length/2);return e.slice(r-1)},verb.unique=function(e,r){if(0===e.length)return[];for(var n=[e.pop()],t=0;e.length>t;t++){for(var i=e.pop(),a=!0,s=0;n.length>s;s++)if(r(i,n[t])){a=!1;break}a&&n.push(i)}return n},verb.eval.nurbs.intersect_rational_curve_surface_by_aabb_refine=function(e,r,n,t,i,a,s,u,o,v,l,b){var c=verb.eval.nurbs.intersect_rational_curve_surface_by_aabb(e,r,n,t,i,a,s,u,o,v,l,b);return c.map(function(o){var v=[o.p,o.uv[0],o.uv[1]],l=verb.eval.nurbs.refine_rational_curve_surface_intersection(e,r,n,t,i,a,s,u,v);return o.p=l[0],o.uv[0]=l[1],o.uv[1]=l[2],o.distance=l[3],delete o.face,o})},verb.eval.nurbs.refine_rational_curve_surface_intersection=function(e,r,n,t,i,a,s,u,o){var v=function(o){var v=verb.eval.nurbs.rational_curve_point(a,s,u,o[0]),l=verb.eval.nurbs.rational_surface_point(e,r,n,t,i,o[1],o[2]),b=numeric.sub(v,l);return numeric.dot(b,b)},l=numeric.uncmin(v,o);return l.solution.concat(l.f)},verb.eval.nurbs.intersect_rational_curve_surface_by_aabb=function(e,r,n,t,i,a,s,u,o,v,l,b){var c=verb.eval.nurbs.rational_curve_adaptive_sample(a,s,u,o,!0),_=verb.eval.nurbs.tesselate_rational_surface_naive(e,r,n,t,i,l,b),h=c.map(function(e){return e[0]}),m=c.map(function(e){return e.slice(1)}),g=verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb(m,h,_,verb.range(_.faces.length),v);return verb.unique(g,function(e,r){return v>numeric.norm2(numeric.sub(e.point,r.point))&&v>Math.abs(e.p-r.p)&&v>numeric.norm2(numeric.sub(e.uv,r.uv))})},verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb=function(e,r,n,t,i){var a=new verb.geom.BoundingBox(e),s=verb.eval.mesh.make_mesh_aabb(n.points,n.faces,t);if(!a.intersects(s,i))return[];if(2!==e.length||1!==t.length){if(1===t.length){var u=verb.left(e),o=verb.rightWithPivot(e),v=verb.left(r),l=verb.rightWithPivot(r);return verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb(u,v,n,t,i).concat(verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb(o,l,n,t,i))}if(2===e.length){var b=verb.eval.mesh.sort_tris_on_longest_axis(s,n.points,n.faces,t),c=verb.left(b),_=verb.right(b);return verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb(e,r,n,c,i).concat(verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb(e,r,n,_,i))}var b=verb.eval.mesh.sort_tris_on_longest_axis(s,n.points,n.faces,t),c=verb.left(b),_=verb.right(b),u=verb.left(e),o=verb.rightWithPivot(e),v=verb.left(r),l=verb.rightWithPivot(r);return verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb(u,v,n,c,i).concat(verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb(u,v,n,_,i)).concat(verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb(o,l,n,c,i)).concat(verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb(o,l,n,_,i))}var h=verb.eval.geom.intersect_segment_with_tri(e[0],e[1],n.points,n.faces[t[0]]);if(null!=h){var m=h.p*(r[1]-r[0])+r[0],g=n.faces[t][0],f=n.faces[t][1],d=n.faces[t][2],p=n.uvs[g],y=n.uvs[f],x=n.uvs[d],k=numeric.sub(y,p),N=numeric.sub(x,p),E=numeric.add(p,numeric.mul(h.s,k),numeric.mul(h.t,N));return[{point:h.point,p:m,uv:E,face:t[0]}]}return[]},verb.eval.geom.intersect_segment_with_tri=function(e,r,n,t){var i=n[t[0]],a=n[t[1]],s=n[t[2]],u=numeric.sub(a,i),o=numeric.sub(s,i),v=numeric.cross(u,o),l=numeric.sub(r,e),b=numeric.sub(e,i),c=-numeric.dot(v,b),_=numeric.dot(v,l);if(Math.abs(_)<verb.EPSILON)return null;var h=c/_;if(0>h||h>1)return null;var m=numeric.add(e,numeric.mul(h,l)),g=numeric.dot(u,o),f=numeric.dot(u,u),d=numeric.dot(o,o),p=numeric.sub(m,i),y=numeric.dot(p,u),x=numeric.dot(p,o),k=g*g-f*d,N=(g*x-d*y)/k,E=(g*y-f*x)/k;return N>1+verb.EPSILON||E>1+verb.EPSILON||-verb.EPSILON>E||-verb.EPSILON>N||N+E>1+verb.EPSILON?null:{point:m,s:N,t:E,p:h}},verb.eval.geom.intersect_segment_with_plane=function(e,r,n,t){var i=numeric.dot(t,numeric.sub(e,r));if(EPSILON>abs(i))return null;var a=numeric.dot(t,numeric.sub(n,e));return{p:a/i}},verb.eval.geom.intersect_aabb_trees=function(e,r,n,t,i,a){var s=i.bounding_box.intersects(a.bounding_box);return s?0===i.children.length&&0===a.children.length?[[i.triangle,a.triangle]]:0===i.children.length&&0!=a.children.length?verb.eval.geom.intersect_aabb_trees(e,r,n,t,i,a.children[0]).concat(verb.eval.geom.intersect_aabb_trees(e,r,n,t,i,a.children[1])):0!=i.children.length&&0===a.children.length?verb.eval.geom.intersect_aabb_trees(e,r,n,t,i.children[0],a).concat(verb.eval.geom.intersect_aabb_trees(e,r,n,t,i.children[1],a)):0!=i.children.length&&0!=a.children.length?verb.eval.geom.intersect_aabb_trees(e,r,n,t,i.children[0],a.children[0]).concat(verb.eval.geom.intersect_aabb_trees(e,r,n,t,i.children[0],a.children[1])).concat(verb.eval.geom.intersect_aabb_trees(e,r,n,t,i.children[1],a.children[0])).concat(verb.eval.geom.intersect_aabb_trees(e,r,n,t,i.children[1],a.children[1])):void 0:[]},verb.eval.mesh.make_mesh_aabb_tree=function(e,r,n){var t={bounding_box:verb.eval.mesh.make_mesh_aabb(e,r,n),children:[]};if(1===n.length)return t.triangle=n[0],t;var i=verb.eval.mesh.sort_tris_on_longest_axis(t.bounding_box,e,r,n),a=i.slice(0,Math.floor(i.length/2)),s=i.slice(Math.floor(i.length/2),i.length);return t.children=[verb.eval.mesh.make_mesh_aabb_tree(e,r,a),verb.eval.mesh.make_mesh_aabb_tree(e,r,s)],t},verb.eval.mesh.make_mesh_aabb=function(e,r,n){var t=new verb.geom.BoundingBox;return n.forEach(function(n){t.add(e[r[n][0]]),t.add(e[r[n][1]]),t.add(e[r[n][2]])}),t},verb.eval.mesh.sort_tris_on_longest_axis=function(e,r,n,t){for(var i=e.get_longest_axis(),a=[],s=t.length-1;s>=0;s--){var u=t[s],o=verb.eval.mesh.get_min_coordinate_on_axis(r,n[u],i);a.push([o,u])}a.sort(function(e,r){return e[0]>r[0]});for(var v=[],s=0,l=a.length;l>s;s++)v.push(a[s][1]);return v},verb.eval.mesh.get_min_coordinate_on_axis=function(e,r,n){for(var t=[],i=0;3>i;i++)t.push(e[r[i]][n]);return Math.min.apply(Math,t)},verb.eval.geom.get_tri_centroid=function(e,r){for(var n=[0,0,0],t=0;3>t;t++)for(var i=0;3>i;i++)n[i]+=e[r[t]][i];for(var t=0;3>t;t++)n[t]/=3;return n},verb.eval.geom.get_tri_norm=function(e,r){var n=e[r[0]],t=e[r[1]],i=e[r[2]],a=numeric.sub(t,n),s=numeric.sub(i,n),u=numeric.cross(a,s);return numeric.mul(1/numeric.norm2(u),u)},verb.eval.nurbs.intersect_rational_curves_by_aabb_refine=function(e,r,n,t,i,a,s,u){var o=verb.eval.nurbs.intersect_rational_curves_by_aabb(e,r,n,t,i,a,s,u);return o.map(function(s){return verb.eval.nurbs.refine_rational_curve_intersection(e,r,n,t,i,a,s)})},verb.eval.nurbs.refine_rational_curve_intersection=function(e,r,n,t,i,a,s){var u=function(s){var u=verb.eval.nurbs.rational_curve_point(e,r,n,s[0]),o=verb.eval.nurbs.rational_curve_point(t,i,a,s[1]),v=numeric.sub(u,o);return numeric.dot(v,v)},o=numeric.uncmin(u,s);return o.solution.concat(o.f)},verb.eval.nurbs.intersect_rational_curves_by_aabb=function(e,r,n,t,i,a,s,u){var o=verb.eval.nurbs.rational_curve_adaptive_sample(e,r,n,s,!0),v=verb.eval.nurbs.rational_curve_adaptive_sample(t,i,a,s,!0),l=o.map(function(e){return e[0]}),b=v.map(function(e){return e[0]}),c=o.map(function(e){return e.slice(1)}),_=v.map(function(e){return e.slice(1)});return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(c,_,l,b,u)},verb.eval.nurbs.intersect_parametric_polylines_by_aabb=function(e,r,n,t,i){var a=new verb.geom.BoundingBox(e),s=new verb.geom.BoundingBox(r);if(!a.intersects(s,i))return[];if(2!==e.length||2!==r.length){if(2===e.length){var u=Math.ceil(r.length/2),o=r.slice(0,u),v=r.slice(u-1),l=t.slice(0,u),b=t.slice(u-1);return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(e,o,n,l,i).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(e,v,n,b,i))}if(2===r.length){var c=Math.ceil(e.length/2),_=e.slice(0,c),h=e.slice(c-1),m=n.slice(0,c),g=n.slice(c-1);return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(_,r,m,t,i).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(h,r,g,t,i))}var c=Math.ceil(e.length/2),_=e.slice(0,c),h=e.slice(c-1),m=n.slice(0,c),g=n.slice(c-1),u=Math.ceil(r.length/2),o=r.slice(0,u),v=r.slice(u-1),l=t.slice(0,u),b=t.slice(u-1);return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(_,o,m,l,i).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(_,v,m,b,i)).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(h,o,g,l,i)).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(h,v,g,b,i))}var f=verb.eval.geom.intersect_segments(e[0],e[1],r[0],r[1],i);return null!=f?(f[0][0]=f[0][0]*(n[1]-n[0])+n[0],f[1][0]=f[1][0]*(t[1]-t[0])+t[0],[[f[0][0],f[1][0]]]):[]},verb.eval.geom.intersect_segments=function(e,r,n,t,i){var a=numeric.sub(r,e),s=Math.sqrt(numeric.dot(a,a)),u=numeric.mul(1/s,a),o=numeric.sub(t,n),v=Math.sqrt(numeric.dot(o,o)),l=numeric.mul(1/v,o),b=verb.eval.geom.intersect_rays(e,u,n,l);if(null!=b){var c=Math.min(Math.max(0,b[0]/s),1),_=Math.min(Math.max(0,b[1]/v),1),h=numeric.add(numeric.mul(c,a),e),m=numeric.add(numeric.mul(_,o),n),g=numeric.norm2Squared(numeric.sub(h,m));if(i*i>g)return[[c].concat(h),[_].concat(m)]}return null},verb.eval.geom.closest_point_on_ray=function(e,r,n){var t=numeric.sub(e,r),i=numeric.dot(t,n),a=numeric.add(r,numeric.mul(i,n));return a},verb.eval.geom.intersect_rays=function(e,r,n,t){var i=numeric.dot(r,t),a=numeric.dot(r,n),s=numeric.dot(r,e),u=numeric.dot(t,n),o=numeric.dot(t,e),v=numeric.dot(r,r),l=numeric.dot(t,t),b=v*l-i*i;if(Math.abs(b)<verb.EPSILON)return null;var c=i*(a-s)-v*(u-o),_=c/b,h=(a-s+_*i)/v;return[h,_]},verb.eval.mesh.intersect_meshes_by_aabb=function(e,r,n,t,i){var a=verb.range(r.length),s=verb.range(i.length),u=verb.eval.mesh.make_mesh_aabb_tree(e,r,a),o=verb.eval.mesh.make_mesh_aabb_tree(t,i,s);verb.eval.mesh.intersect_aabb_tree(e,r,t,i,u,o)},verb.eval.geom.intersect_tris=function(e,r,n,t,i){for(var a=[e[tr1[0]],e[tr1[1]]],s=[e[tr1[1]],e[tr1[2]]],u=[e[tr1[2]],e[tr1[0]]],o=[t[tr2[0]],t[tr2[1]]],v=[t[tr2[1]],t[tr2[2]]],l=[t[tr2[2]],t[tr2[0]]],b=[a,s,u],c=[o,v,l],_=[],h=verb.eval.geom.get_tri_norm(t,i),m=t[tr2[0]],g=0;3>g;g++){var f=verb.eval.geom.intersect_segment_with_plane(b[g][0],c[g][1],m,h);f.intersects&&_.push(f)}if(2!==_.length)return null;for(var d=[_[0].point,_[1].point],p=[],g=0;3>g;g++){var y=verb.eval.geom.intersect_segments(d[0],d[1],d,b1,tol);y&&p.push(y)}0===p.length||1===p.length||2===p.length},verb.eval.nurbs.tesselate_rational_surface_naive=function(e,r,n,t,i,a,s){1>a&&(a=1),1>s&&(s=1);for(var u=1/a,o=1/s,v=[],l=[],b=[],c=0;a+1>c;c++)for(var _=0;s+1>_;_++){var h=c*u,m=_*o;l.push([h,m]);var g=verb.eval.nurbs.rational_surface_derivs(e,r,n,t,i,1,h,m),f=g[0][0];v.push(f);var d=numeric.cross(g[0][1],g[1][0]);b.push(d)}for(var p=[],c=0;a>c;c++)for(var _=0;s>_;_++){var y=c*(s+1)+_,x=(c+1)*(s+1)+_,k=x+1,N=y+1,E=[y,x,k],M=[y,k,N];p.push(E),p.push(M)}return{points:v,faces:p,uvs:l,normals:b}},verb.eval.nurbs.rational_curve_regular_sample=function(e,r,n,t,i){return verb.eval.nurbs.rational_curve_regular_sample_range(e,r,n,0,1,t,i)},verb.eval.nurbs.rational_curve_regular_sample_range=function(e,r,n,t,i,a,s){1>a&&(a=2);for(var u=[],o=(i-t)/(a-1),v=0,l=0;a>l;l++)v=t+o*l,s?u.push([v].concat(verb.eval.nurbs.rational_curve_point(e,r,n,v))):u.push(verb.eval.nurbs.rational_curve_point(e,r,n,v));return u},verb.eval.nurbs.rational_curve_adaptive_sample=function(e,r,n,t,i){return 1===e?i?n.map(function(e,n){return[r[n+1]].concat(verb.eval.nurbs.dehomogenize(e))}):n.map(verb.eval.nurbs.dehomogenize):verb.eval.nurbs.rational_curve_adaptive_sample_range(e,r,n,0,1,t,i)},verb.eval.nurbs.rational_curve_adaptive_sample_range=function(e,r,n,t,i,a,s){var u=verb.eval.nurbs.rational_curve_point(e,r,n,t),o=verb.eval.nurbs.rational_curve_point(e,r,n,i),v=.5+.2*Math.random(),l=t+(i-t)*v,b=verb.eval.nurbs.rational_curve_point(e,r,n,l),c=numeric.sub(u,o),_=numeric.sub(u,b);if(a>numeric.dot(c,c)&&numeric.dot(_,_)>a||!verb.eval.nurbs.three_points_are_flat(u,b,o,a)){var h=t+.5*(i-t),m=verb.eval.nurbs.rational_curve_adaptive_sample_range(e,r,n,t,h,a,s),g=verb.eval.nurbs.rational_curve_adaptive_sample_range(e,r,n,h,i,a,s);return m.slice(0,-1).concat(g)}return s?[[t].concat(u),[i].concat(o)]:[u,o]},verb.eval.nurbs.three_points_are_flat=function(e,r,n,t){var i=numeric.sub(r,e),a=numeric.sub(n,e),s=crossprod(i,a),u=numeric.dot(s,s);return t>u},verb.eval.nurbs.divide_rational_surface_adaptive=function(e,r,n,t,i,a){for(var s={degree_u:e,knots_u:r,degree_v:n,knots_v:t,homo_control_points:i},u=a.minDivsU,o=a.minDivsV,v=Math.max.apply(null,r),l=Math.min.apply(null,r),b=Math.max.apply(null,t),c=Math.min.apply(null,t),_=(v-l)/u,h=(b-c)/o,m=[],g=0;u>g;g++)for(var f=0;o>f;f++){var d=l+_*g,p=l+_*(g+1),y=c+h*f,x=c+h*(f+1);m.push(new verb.eval.nurbs.AdaptiveRefinementNode(s,d,p,y,x,null,null))}for(var g=0;u>g;g++)for(var f=0;o>f;f++){var k=g*o+f,N=getNorthNeighbor(k,g,f,u,o,m),E=getEastNeighbor(k,g,f,u,o,m),M=getSouthNeighbor(k,g,f,u,o,m),w=getWestNeighbor(k,g,f,u,o,m);m[k].neighbors=[N,E,M,w],m.divide(a)}return m},verb.eval.nurbs.is_rational_surface_domain_flat=function(e,r,n,t,i,a){a.maxCurvatureDifference||.01;var s=verb.eval.nurbs.rational_surface_curvature(e.degree_u,e.knots_u,e.degree_v,e.knots_v,e.homo_control_points,r,t),u=verb.eval.nurbs.rational_surface_curvature(e.degree_u,e.knots_u,e.degree_v,e.knots_v,e.homo_control_points,n,t),o=verb.eval.nurbs.rational_surface_curvature(e.degree_u,e.knots_u,e.degree_v,e.knots_v,e.homo_control_points,n,i),v=verb.eval.nurbs.rational_surface_curvature(e.degree_u,e.knots_u,e.degree_v,e.knots_v,e.homo_control_points,r,i),l=verb.eval.nurbs.rational_surface_curvature(e.degree_u,e.knots_u,e.degree_v,e.knots_v,e.homo_control_points,(r+n)/2,(t+i)/2),b=[s.mean,u.mean,o.mean,v.mean,l.mean];[s.point,u.point,o.point,v.point,l.point];for(var c=0;5>c;c++)for(var _=c+1;5>_;_++)if(Math.abs(b[c]-b[_])>curvatureDifference)return!1;return!0},verb.eval.nurbs.triangulate_adaptive_refinement_node_tree=function(e){var r={uvs:[],points:[],normals:[],faces:[]};return r.faces=e.map(function(e){e.triangulate(r)}).flatten(),r},verb.eval.nurbs.tesselate_rational_surface_adaptive=function(e,r,n,t,i,a){verb.eval.nurbs.divide_rational_surface_adaptive(e,r,n,t,i,a);var s=verb.eval.nurbs.triangulate_adaptive_refinement_node_tree(arrTree);return verb.eval.nurbs.unique_mesh(s)},verb.eval.nurbs.unique_mesh=function(e){return e},Array.prototype.where=function(e){if(0===this.length)return this;for(var r=[],n=0;this.length>n;n++)e(this[n])&&r.push(this[n]);return r},verb.eval.nurbs.AdaptiveRefinementNode=function(e,r,n,t,i,a,s){this.srf=e,this.u0=r,this.u1=n,this.v0=t,this.v1=i,this.parentNode=a,this.neighbors=s,this.leafEdgeUvs=[[r,t],[n,t],[n,i],[r,i]],this.cachedEdgeUvs=[]},verb.eval.nurbs.AdaptiveRefinementNode.prototype.isLeaf=function(){return void 0===this.children},verb.eval.nurbs.AdaptiveRefinementNode.prototype.evalSurface=function(){var e=verb.eval.nurbs.rational_surface_derivs(this.srf.degree_u,this.srf.knots_u,this.srf.degree_v,this.srf.knots_v,this.srf.homo_control_points,1,pt_u,pt_v),r=e[0][0];points.push(r);var n=numeric.cross(e[0][1],e[1][0]);return{point:r,normal:n}},verb.eval.nurbs.AdaptiveRefinementNode.prototype.getEdgeUvs=function(e){return this.isLeaf()?[this.leafEdgeUvs[e]]:(this.cachedEdgeUvs[e]=this.cachedEdgeUvs[e]||this.children[e].getEdgeUvs(e).concat(this.children[(e+1)%4].getEdgeUvs(e)),this.cachedEdgeUvs[e])},verb.eval.nurbs.AdaptiveRefinementNode.prototype.getAllEdgeUvs=function(e){var r=[this.leafEdgeUvs[e]];if(null===this.neighbors[e])return r;var n=this.neighbors[e].getEdgeUvs((e+2)%4),t=e%2,i=this,a=[function(e){return e[0]>i.u0+verb.EPSILON&&e[0]<i.u1-verb.EPSILON},function(e){return e[1]>i.v0+verb.EPSILON&&e[1]<i.v1-verb.EPSILON}];return r.concat(n.where(a[t]).reverse())},verb.eval.nurbs.AdaptiveRefinementNode.prototype.triangulateLeaf=function(e){for(var r=e.points.length-1,n=[],t=0;4>t;t++)n.concat(this.getAllEdgeUvs(t));if(n.forEach(function(r){e.uvs.push(r);var n=this.evalSurface(r);e.points.push(n.point),e.normals.push(n.normal)}),4===n.length)return e.faces.push([r+1,r+4,r+2]),e.faces.push([r+4,r+3,r+2]),void 0;this.u05=this.u05||(this.u0+this.u1)/2,this.v05=this.v05||(this.v0+this.v1)/2,e.uvs.push([this.u05,this.v05]);var i=this.evalSurface([this.u05,this.v05]);e.points.push(i.point),e.normals.push(i.normal);for(var a=e.points.length-1,t=0;n.length>t;t++)e.faces.push([a,(r+t+2)%n.length,(r+t+1)%n.length])},verb.eval.nurbs.AdaptiveRefinementNode.prototype.triangulate=function(e){return this.isLeaf()?this.triangulateLeaf(e):(this.children.forEach(function(r){null!==r&&r.triangulate(e)}),void 0)},verb.eval.nurbs.AdaptiveRefinementNode.prototype.shouldDivide=function(e,r){return e.minDepth&&e.minDepth>r?!0:this.srf&&!verb.eval.nurbs.is_rational_surface_domain_flat(this.srf,this.u0,this.u1,this.v0,this.v1,e)?!0:!1},verb.eval.nurbs.AdaptiveRefinementNode.prototype.divide=function(e,r){void 0===r&&(r=0),this.shouldDivide(e,r)&&(r++,this.u05=(this.u0+this.u1)/2,this.v05=(this.v0+this.v1)/2,this.children=[new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,this.u0,this.u05,this.v0,this.v05,this),new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,this.u05,this.u1,this.v0,this.v05,this),new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,this.u05,this.u1,this.v05,this.v1,this),new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,this.u0,this.u05,this.v05,this.v1,this)],this.children[0].neighbors=[this.neighbors[0],this.children[1],this.children[3],this.neighbors[3]],this.children[1].neighbors=[this.neighbors[0],this.neighbors[1],this.children[2],this.children[0]],this.children[2].neighbors=[this.children[1],this.neighbors[1],this.neighbors[2],this.children[3]],this.children[3].neighbors=[this.children[0],this.children[2],this.neighbors[2],this.neighbors[3]],this.children.forEach(function(n){n.divide(e,r)}))},verb.eval.nurbs.get_sweep1_surface=function(e,r,n,t,i,a,s,u){for(var o=verb.eval.nurbs.homogenize_1d(s,u),v=verb.eval.nurbs.rational_curve_point(a,i,o,0),l=1/s.length,b=[],c=[],_=0;s.length>_;_++){for(var h=verb.eval.nurbs.rational_curve_point(a,i,o,_*l),m=numeric.sub(h,v),g=[],f=[],d=0;n.length>d;d++)g.push(numeric.add(m,n[d])),f.push(t[d]*u[_]);b.push(g),c.push(f)}return{knots_u:i,knots_v:e,control_points:b,degree_u:a,degree_v:r,weights:c}},verb.eval.nurbs.get_ellipse_arc=function(e,r,n,t,i,a,s){a>s&&(s=2*Math.PI+a);var u=s-a,o=0;o=Math.PI/2>=u?1:Math.PI>=u?2:3*Math.PI/2>=u?3:4;var v=u/o,l=Math.cos(v/2),b=numeric.add(e,numeric.mul(t,Math.cos(a),r),numeric.mul(i,Math.sin(a),n)),c=numeric.sub(numeric.mul(Math.cos(a),n),numeric.mul(Math.sin(a),r)),_=verb.eval.nurbs.zeros_1d(2*o),h=verb.eval.nurbs.zeros_1d(2*o+3),m=0,g=a,f=verb.eval.nurbs.zeros_1d(2*o);_[0]=b,f[0]=1;for(var d=1;o>=d;d++){g+=v;var p=numeric.add(e,numeric.mul(t,Math.cos(g),r),numeric.mul(i,Math.sin(g),n));f[m+2]=1,_[m+2]=p;var y=numeric.sub(numeric.mul(Math.cos(g),n),numeric.mul(Math.sin(g),r)),x=verb.eval.geom.intersect_rays(b,numeric.mul(1/numeric.norm2(c),c),p,numeric.mul(1/numeric.norm2(y),y)),k=numeric.add(b,numeric.mul(c,x[0]));f[m+1]=l,_[m+1]=k,m+=2,o>d&&(b=p,c=y)}for(var N=2*o+1,d=0;3>d;d++)h[d]=0,h[d+N]=1;switch(o){case 1:break;case 2:h[3]=h[4]=.5;break;case 3:h[3]=h[4]=1/3,h[5]=h[6]=2/3;break;case 4:h[3]=h[4]=.25,h[5]=h[6]=.5,h[7]=h[8]=.75}return{knots:h,control_points:_,degree:2,weights:f}},verb.eval.nurbs.get_sphere_surface=function(e,r,n,t){var i=verb.eval.nurbs.get_arc(e,numeric.mul(r,-1),n,t,0,Math.PI);return verb.eval.nurbs.get_revolved_surface(e,r,2*Math.PI,i.knots,i.degree,i.control_points,i.weights)},verb.eval.nurbs.get_polyline_curve=function(e){for(var r=e.length-1,n=1/r,t=[0,0],i=1;r>i;i++)t.push(i*n);t.push(1),t.push(1);for(var a=[],i=0;e.length>i;i++)a.push(1);return{knots:t,control_points:e.slice(0),degree:1,weights:a}},verb.eval.nurbs.get_4pt_surface=function(e,r,n,t){var i=numeric.mul(.5,numeric.add(e,t)),a=numeric.mul(.5,numeric.add(r,n)),s=numeric.mul(.5,numeric.add(n,t)),u=numeric.mul(.5,numeric.add(e,r)),o=numeric.mul(.5,numeric.add(i,a));return{knots_u:[0,0,0,1,1,1],knots_v:[0,0,0,1,1,1],control_points:[[e,i,t],[u,o,s],[r,a,n]],degree_u:2,degree_v:2,weights:[[1,1,1],[1,1,1],[1,1,1]]}},verb.eval.nurbs.get_cylinder_surface=function(e,r,n,t,i){var a=crossprod(e,r),s=(2*Math.PI,verb.eval.nurbs.get_arc(n,r,a,i,0,2*Math.PI));return verb.eval.nurbs.get_extruded_surface(e,t,s.knots,s.degree,s.control_points,s.weights)},verb.eval.nurbs.get_cone_surface=function(e,r,n,t,i){var a=2*Math.PI,s=1,u=[numeric.add(n,numeric.mul(t,e)),numeric.add(n,numeric.mul(i,r))],o=[0,0,1,1],v=[1,1];return verb.eval.nurbs.get_revolved_surface(n,e,a,o,s,u,v)},verb.eval.nurbs.get_extruded_surface=function(e,r,n,t,i,a){for(var s=verb.eval.nurbs.zeros_2d(3,i.length),u=verb.eval.nurbs.zeros_2d(3,i.length),o=numeric.mul(e,r),v=numeric.mul(e,.5*r),l=0;i.length>l;l++)s[0][l]=i[l],s[1][l]=numeric.add(v,i[l]),s[2][l]=numeric.add(o,i[l]),u[0][l]=a[l],u[1][l]=a[l],u[2][l]=a[l];return{knots_u:[0,0,0,1,1,1],knots_v:n,control_points:s,degree_u:2,degree_v:t,weights:u}},verb.eval.nurbs.get_revolved_surface=function(e,r,n,t,i,a,s){var u,o,v,l;Math.PI/2>=n?(u=1,o=verb.eval.nurbs.zeros_1d(6+2*(u-1))):Math.PI>=n?(u=2,o=verb.eval.nurbs.zeros_1d(6+2*(u-1)),o[3]=o[4]=.5):3*Math.PI/2>=n?(u=3,o=verb.eval.nurbs.zeros_1d(6+2*(u-1)),o[3]=o[4]=1/3,o[5]=o[6]=2/3):(u=4,o=verb.eval.nurbs.zeros_1d(6+2*(u-1)),o[3]=o[4]=.25,o[5]=o[6]=.5,o[7]=o[8]=.75);for(var b=n/u,c=3+2*(u-1),_=0;3>_;c++,_++)o[_]=0,o[c]=1;for(var h=Math.cos(b/2),m=0,g=verb.eval.nurbs.zeros_1d(u+1),f=verb.eval.nurbs.zeros_1d(u+1),v=verb.eval.nurbs.zeros_2d(2*u+1,a.length),l=verb.eval.nurbs.zeros_2d(2*u+1,a.length),_=1;u>=_;_++)m+=b,f[_]=Math.cos(m),g[_]=Math.sin(m);for(c=0;a.length>c;c++){var d=verb.eval.geom.closest_point_on_ray(a[c],e,r),p=numeric.sub(a[c],d),y=numeric.norm2(p),x=crossprod(r,p);y>verb.EPSILON&&(p=numeric.mul(1/y,p),x=numeric.mul(1/y,x)),v[0][c]=a[c];var k=a[c];l[0][c]=s[c];for(var N=x,E=0,m=0,_=1;u>=_;_++){var M=0==y?d:numeric.add(d,numeric.mul(y,f[_],p),numeric.mul(y,g[_],x));v[E+2][c]=M,l[E+2][c]=s[c];var w=numeric.sub(numeric.mul(f[_],x),numeric.mul(g[_],p));if(0==y)v[E+1][c]=d;else{var z=verb.eval.geom.intersect_rays(k,numeric.mul(1/numeric.norm2(N),N),M,numeric.mul(1/numeric.norm2(w),w)),A=numeric.add(k,numeric.mul(N,z[0]));v[E+1][c]=A}l[E+1][c]=h*s[c],E+=2,u>_&&(k=M,N=w)}}return{knots_u:o,knots_v:t,control_points:v,degree_u:2,degree_v:i,weights:l}},verb.eval.nurbs.get_arc=function(e,r,n,t,i,a){return verb.eval.nurbs.get_ellipse_arc(e,r,n,t,t,i,a)},verb.eval.nurbs.rational_surface_curvature=function(e,r,n,t,i,a,s){var u=verb.eval.nurbs.rational_surface_derivs(e,r,n,t,i,2,a,s),o=u[0][1],v=u[1][0],l=u[0][2],b=u[2][0],c=u[1][1],_=numeric.cross(o,v),h=numeric.dot(l,_),m=numeric.dot(c,_),g=numeric.dot(b,_),f=[[h,m],[m,g]],d=numeric.eig(f),p=d.lambda.x[0],y=d.lambda.x[1],x=.5*(p+y),k=p*y,N=numeric.add(numeric.mul(d.E.x[0][0],o),numeric.mul(d.E.x[0][1],v)),E=numeric.add(numeric.mul(d.E.x[1][0],o),numeric.mul(d.E.x[1][1],v));return{point:u[0][0],normal:_,mean:x,gaussian:k,shapeOperator:f,k1:p,k2:y,p1:N,p2:E,p1p:d.E.x[0],p2p:d.E.x[1]}},verb.eval.nurbs.curve_knot_insert=function(e,r,n,t,i,a){var s=(n[0].length,r.length-e-2),u=n.length,o=verb.eval.nurbs.knot_span(e,t,r),v=s+e+1,l=u+a,b=Array(e+1),c=Array(r.length+a),_=Array(l),h=0;for(h=0;o>=h;h++)c[h]=r[h];for(h=1;a>=h;h++)c[o+h]=t;for(h=o+1;v>=h;h++)c[h+a]=r[h];for(h=0;o-e>=h;h++)_[h]=n[h];for(h=o-i;s>=h;h++)_[h+a]=n[h];for(h=0;e-i>=h;h++)b[h]=n[o-e+1];for(var m=0,g=0,f=1;a>=f;f++){for(m=o-e+f,h=0;e-f-i>=h;h++)g=(t-r[m+h])/(r[h+o+1]-r[m+h]),b[h]=numeric.add(numeric.mul(g,b[h+1]),numeric.mul(1-g,b[h]));_[m]=b[0],_[o+a-f-i]=b[e-f-i]}for(h=m+1;o-i>h;h++)_[h]=b[h-m];return[c,_]},verb.eval.nurbs.rational_surface_derivs=function(e,r,n,t,i,a,s,u){var o=verb.eval.nurbs.surface_derivs(e,r,n,t,i,a,s,u),v=verb.eval.nurbs.separate_homo_derivs_2d(o),l=v[0],b=v[1],c=0,_=0,h=0,m=0,g=[],f=l[0][0].length;for(c=0;a>=c;c++)for(g.push([]),m=0;a-c>=m;m++){var u=l[c][m];for(h=1;m>=h;h++)u=numeric.sub(u,numeric.mul(numeric.mul(binomial.get(m,h),b[0][h]),g[c][m-h]));for(_=1;c>=_;_++){u=numeric.sub(u,numeric.mul(numeric.mul(binomial.get(c,_),b[_][0]),g[c-_][m]));var d=verb.eval.nurbs.zeros_1d(f);for(h=1;m>=h;h++)d=numeric.add(d,numeric.mul(numeric.mul(binomial.get(m,h),b[_][h]),g[c-_][m-h]));u=numeric.sub(u,numeric.mul(binomial.get(c,_),d))}g[c].push(numeric.mul(1/b[0][0],u))}return g},verb.eval.nurbs.rational_surface_point=function(e,r,n,t,i,a,s){return verb.eval.nurbs.dehomogenize(verb.eval.nurbs.surface_point(e,r,n,t,i,a,s))},verb.eval.nurbs.rational_curve_derivs=function(e,r,n,t,i){var a=verb.eval.nurbs.separate_homo_derivs_1d(verb.eval.nurbs.curve_derivs(e,r,n,t,i)),s=a[0],u=a[1],o=0,v=0,l=[];for(o=0;i>=o;o++){var b=s[o];for(v=1;o>=v;v++)b=numeric.sub(b,numeric.mul(numeric.mul(binomial.get(o,v),u[v]),l[o-v]));l.push(numeric.mul(1/u[0],b))}return l},verb.eval.nurbs.separate_homo_derivs_1d=function(e){for(var r=e[0].length,n=r-1,t=[],i=[],a=0,s=e.length;s>a;a++)t.push(e[a].slice(0,n)),i.push(e[a][n]);return[t,i]},verb.eval.nurbs.separate_homo_derivs_2d=function(e){for(var r=[],n=[],t=0,i=e.length;i>t;t++){var a=verb.eval.nurbs.separate_homo_derivs_1d(e[t]);r.push(a[0]),n.push(a[1])}return[r,n]},verb.eval.nurbs.rational_curve_point=function(e,r,n,t){return verb.eval.nurbs.dehomogenize(verb.eval.nurbs.curve_point(e,r,n,t))},verb.eval.nurbs.dehomogenize=function(e){for(var r=e.length,n=[],t=e[r-1],i=0;e.length-1>i;i++)n.push(e[i]/t);return n},verb.eval.nurbs.homogenize_1d=function(e,r){for(var n=e.length,t=e[0].length,i=0,a=[],s=0,u=[],o=0;n>o;o++){var v=[];for(u=e[o],s=r[o],i=0;t>i;i++)v.push(u[i]*s);v.push(s),a.push(v)}return a},verb.eval.nurbs.homogenize_2d=function(e,r){for(var n=e.length,t=(e[0].length,e[0][0].length,[]),i=0;n>i;i++)t.push(verb.eval.nurbs.homogenize_1d(e[i],r[i]));return t},verb.eval.nurbs.surface_derivs=function(e,r,n,t,i,a,s,u){var o=r.length-e-2,v=t.length-n-2;return verb.eval.nurbs.surface_derivs_given_n_m(o,e,r,v,n,t,i,a,s,u)},verb.eval.nurbs.surface_derivs_given_n_m=function(e,r,n,t,i,a,s,u,o,v){if(verb.eval.nurbs.are_valid_relations(r,s.length,n.length)===!1||verb.eval.nurbs.are_valid_relations(i,s[0].length,a.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var l=s[0][0].length,b=Math.min(u,r),c=Math.min(u,i),_=verb.eval.nurbs.zeros_3d(b+1,c+1,l),h=verb.eval.nurbs.knot_span_given_n(e,r,o,n),m=verb.eval.nurbs.knot_span_given_n(t,i,v,a),g=verb.eval.nurbs.deriv_basis_functions_given_n_i(h,o,r,e,n),f=verb.eval.nurbs.deriv_basis_functions_given_n_i(m,v,i,t,a),d=verb.eval.nurbs.zeros_2d(i+1,l),p=0,y=0,x=0,k=0,N=0;for(p=0;b>=p;p++){for(y=0;i>=y;y++)for(d[y]=verb.eval.nurbs.zeros_1d(l),x=0;r>=x;x++)d[y]=numeric.add(d[y],numeric.mul(g[p][x],s[h-r+x][m-i+y]));for(N=Math.min(u-p,c),k=0;N>=k;k++)for(_[p][k]=verb.eval.nurbs.zeros_1d(l),y=0;i>=y;y++)_[p][k]=numeric.add(_[p][k],numeric.mul(f[k][y],d[y]))}return _},verb.eval.nurbs.surface_point=function(e,r,n,t,i,a,s){var u=r.length-e-2,o=t.length-n-2;return verb.eval.nurbs.surface_point_given_n_m(u,e,r,o,n,t,i,a,s)},verb.eval.nurbs.volume_point=function(e,r,n,t,i,a,s,u,o,v){var l=r.length-e-2,b=t.length-n-2,c=a.length-i-2;return verb.eval.nurbs.volume_point_given_n_m_l(l,e,r,b,n,t,c,i,a,s,u,o,v)},verb.eval.nurbs.volume_point_given_n_m_l=function(e,r,n,t,i,a,s,u,o,v,l,b,c){if(!verb.eval.nurbs.are_valid_relations(r,v.length,n.length)||!verb.eval.nurbs.are_valid_relations(i,v[0].length,a.length)||!verb.eval.nurbs.are_valid_relations(u,v[0][0].length,o.length))return console.error("Invalid relations between control points and knot vector"),null;for(var _=v[0][0][0].length,h=verb.eval.nurbs.knot_span_given_n(e,r,l,n),m=verb.eval.nurbs.knot_span_given_n(t,i,b,a),g=verb.eval.nurbs.knot_span_given_n(s,u,c,o),f=verb.eval.nurbs.basis_functions_given_knot_span_index(h,l,r,n),d=verb.eval.nurbs.basis_functions_given_knot_span_index(m,b,i,a),p=verb.eval.nurbs.basis_functions_given_knot_span_index(g,c,u,o),y=h-r,x=m,k=g,N=verb.eval.nurbs.zeros_1d(_),E=verb.eval.nurbs.zeros_1d(_),M=verb.eval.nurbs.zeros_1d(_),w=0,z=0,A=0;u>=A;A++){for(M=verb.eval.nurbs.zeros_1d(_),k=g-u+A,w=0;i>=w;w++){for(E=verb.eval.nurbs.zeros_1d(_),x=m-i+w,z=0;r>=z;z++)E=numeric.add(E,numeric.mul(f[z],v[y+z][x][k]));M=numeric.add(M,numeric.mul(d[w],E))}N=numeric.add(N,numeric.mul(p[A],M))}return N},verb.eval.nurbs.surface_point_given_n_m=function(e,r,n,t,i,a,s,u,o){if(verb.eval.nurbs.are_valid_relations(r,s.length,n.length)===!1||verb.eval.nurbs.are_valid_relations(i,s[0].length,a.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var v=s[0][0].length,l=verb.eval.nurbs.knot_span_given_n(e,r,u,n),b=verb.eval.nurbs.knot_span_given_n(t,i,o,a),c=verb.eval.nurbs.basis_functions_given_knot_span_index(l,u,r,n),_=verb.eval.nurbs.basis_functions_given_knot_span_index(b,o,i,a),h=l-r,m=b,g=verb.eval.nurbs.zeros_1d(v),f=verb.eval.nurbs.zeros_1d(v),d=0,p=0;for(d=0;i>=d;d++){for(f=verb.eval.nurbs.zeros_1d(v),m=b-i+d,p=0;r>=p;p++)f=numeric.add(f,numeric.mul(c[p],s[h+p][m]));g=numeric.add(g,numeric.mul(_[d],f))}return g},verb.eval.nurbs.curve_derivs=function(e,r,n,t,i){var a=r.length-e-2;return verb.eval.nurbs.curve_derivs_given_n(a,e,r,n,t,i)},verb.eval.nurbs.curve_derivs_given_n=function(e,r,n,t,i,a){if(verb.eval.nurbs.are_valid_relations(r,t.length,n.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var s=t[0].length,u=Math.min(a,r),o=verb.eval.nurbs.zeros_2d(u+1,s),v=verb.eval.nurbs.knot_span_given_n(e,r,i,n),l=verb.eval.nurbs.deriv_basis_functions_given_n_i(v,i,r,u,n),b=0,c=0;for(b=0;u>=b;b++)for(c=0;r>=c;c++)o[b]=numeric.add(o[b],numeric.mul(l[b][c],t[v-r+c]));return o},verb.eval.nurbs.are_valid_relations=function(e,r,n){return 0===r+e+1-n?!0:!1},verb.eval.nurbs.curve_point=function(e,r,n,t){var i=r.length-e-2;return verb.eval.nurbs.curve_point_given_n(i,e,r,n,t)},verb.eval.nurbs.curve_point_given_n=function(e,r,n,t,i){if(verb.eval.nurbs.are_valid_relations(r,t.length,n.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;for(var a=verb.eval.nurbs.knot_span_given_n(e,r,i,n),s=verb.eval.nurbs.basis_functions_given_knot_span_index(a,i,r,n),u=verb.eval.nurbs.zeros_1d(t[0].length),o=0;r>=o;o++)u=numeric.add(u,numeric.mul(s[o],t[a-r+o]));return u},verb.eval.nurbs.zeros_1d=function(e){e=e>0?e:0;for(var r=[];e--;)r.push(0);return r},verb.eval.nurbs.zeros_2d=function(e,r){r=r>0?r:0,e=e>0?e:0;for(var n=[],t=r,i=e;e--;){for(n.push([]);t--;)n[i-e-1].push(0);t=r}return n},verb.eval.nurbs.zeros_3d=function(e,r,n){r=r>0?r:0,e=e>0?e:0;for(var t=[],i=r,a=e;e--;){for(t.push([]);i--;)t[a-e-1].push(verb.eval.nurbs.zeros_1d(n));i=r}return t},verb.eval.nurbs.deriv_basis_functions=function(e,r,n){var t=verb.eval.nurbs.knot_span(r,e,n),i=n.length-1,a=i-r-1;return verb.eval.nurbs.deriv_basis_functions_given_n_i(t,e,r,a,n)},verb.eval.nurbs.deriv_basis_functions_given_n_i=function(e,r,n,t,i){var a=verb.eval.nurbs.zeros_2d(n+1,n+1),s=Array(n+1),u=Array(n+1),o=0,v=0,l=1,b=0;
for(a[0][0]=1,l=1;n>=l;l++){for(s[l]=r-i[e+1-l],u[l]=i[e+l]-r,o=0,b=0;l>b;b++)a[l][b]=u[b+1]+s[l-b],v=a[b][l-1]/a[l][b],a[b][l]=o+u[b+1]*v,o=s[l-b]*v;a[l][l]=o}var c=verb.eval.nurbs.zeros_2d(t+1,n+1),_=verb.eval.nurbs.zeros_2d(2,n+1),h=1,m=0,g=1,f=0,d=0,p=0,y=0,x=0;for(l=0;n>=l;l++)c[0][l]=a[l][n];for(b=0;n>=b;b++)for(m=0,g=1,_[0][0]=1,h=1;t>=h;h++){for(f=0,d=b-h,p=n-h,b>=h&&(_[g][0]=_[m][0]/a[p+1][d],f=_[g][0]*a[d][p]),y=d>=-1?1:-d,x=p>=b-1?h-1:n-b,l=y;x>=l;l++)_[g][l]=(_[m][l]-_[m][l-1])/a[p+1][d+l],f+=_[g][l]*a[d+l][p];p>=b&&(_[g][h]=-_[m][h-1]/a[p+1][b],f+=_[g][h]*a[b][p]),c[h][b]=f,l=m,m=g,g=l}for(b=n,h=1;t>=h;h++){for(l=0;n>=l;l++)c[h][l]*=b;b*=n-h}return c},verb.eval.nurbs.basis_functions=function(e,r,n){var t=verb.eval.nurbs.knot_span(e,r,n);return verb.eval.nurbs.basis_functions_given_knot_span_index(t,e,r,n)},verb.eval.nurbs.basis_functions_given_knot_span_index=function(e,r,n,t){var i=Array(n+1),a=Array(n+1),s=Array(n+1),u=0,o=0;i[0]=1;for(var v=1;n>=v;v++){a[v]=r-t[e+1-v],s[v]=t[e+v]-r,u=0;for(var l=0;v>l;l++)o=i[l]/(s[l+1]+a[v-l]),i[l]=u+s[l+1]*o,u=a[v-l]*o;i[v]=u}return i},verb.eval.nurbs.knot_span=function(e,r,n){var t=n.length-1,i=t-e-1;return verb.eval.nurbs.knot_span_given_n(i,e,r,n)},verb.eval.nurbs.knot_span_given_n=function(e,r,n,t){if(n>=t[e+1])return e;if(t[r]>n)return r;for(var i=r,a=e+1,s=Math.floor((i+a)/2);t[s]>n||n>=t[s+1];)t[s]>n?a=s:i=s,s=Math.floor((i+a)/2);return s};